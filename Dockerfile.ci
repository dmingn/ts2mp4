# Use the same Python version as the project
ARG PYTHON_VERSION=3.9
FROM python:${PYTHON_VERSION}-slim

# Set non-interactive frontend for package installers
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends make wget xz-utils && \
    rm -rf /var/lib/apt/lists/*

# Download and install static FFmpeg build
ARG FFMPEG_VERSION=7.0.2-amd64-static
RUN wget https://johnvansickle.com/ffmpeg/releases/ffmpeg-${FFMPEG_VERSION}.tar.xz -O /tmp/ffmpeg.tar.xz
RUN tar -xf /tmp/ffmpeg.tar.xz -C /tmp && \
    mv /tmp/ffmpeg-${FFMPEG_VERSION}/ffmpeg /usr/local/bin/ && \
    mv /tmp/ffmpeg-${FFMPEG_VERSION}/ffprobe /usr/local/bin/ && \
    rm -rf /tmp/ffmpeg.tar.xz /tmp/ffmpeg-${FFMPEG_VERSION}

# Install python tooling (pipx and poetry) in an isolated environment
RUN python3 -m pip install --user pipx
ENV PATH="/root/.local/bin:${PATH}"
ARG POETRY_VERSION
RUN pipx install poetry==${POETRY_VERSION}

# Set up the working directory
WORKDIR /app

# Install python dependencies
COPY pyproject.toml poetry.lock ./

RUN poetry config virtualenvs.create false && poetry install --no-root
